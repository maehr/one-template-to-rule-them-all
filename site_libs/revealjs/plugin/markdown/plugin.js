/*!
 * The reveal.js markdown plugin. Handles parsing of
 * markdown inside of presentations as well as loading
 * of external markdown documents.
 */import{marked as p}from"marked";const M=`\r?
---\r?
`,y=null,L="^s*notes?:",P="\\.element\\s*?(.+?)$",C="\\.slide:\\s*?(\\S.+?)$",k="__SCRIPT_END__",m=/\[\s*((\d*):)?\s*([\s\d,|-]*)\]/,O={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},H=()=>{let f;function g(t){let a=(t.querySelector("[data-template]")||t.querySelector("script")||t).textContent;a=a.replace(new RegExp(k,"g"),"<\/script>");const r=a.match(/^\n?(\s*)/)[1].length,l=a.match(/^\n?(\t*)/)[1].length;return l>0?a=a.replace(new RegExp("\\n?\\t{"+l+"}(.*)","g"),function(n,s){return`
`+s}):r>1&&(a=a.replace(new RegExp("\\n? {"+r+"}(.*)","g"),function(n,s){return`
`+s})),a}function E(t){const e=t.attributes,a=[];for(let r=0,l=e.length;r<l;r++){const n=e[r].name,s=e[r].value;/data\-(markdown|separator|vertical|notes)/gi.test(n)||(s?a.push(n+'="'+s+'"'):a.push(n))}return a.join(" ")}function b(t){const e=f?.getConfig?.().markdown;return t=t||{},t.separator=t.separator||e?.separator||M,t.verticalSeparator=t.verticalSeparator||e?.verticalSeparator||y,t.notesSeparator=t.notesSeparator||e?.notesSeparator||L,t.attributes=t.attributes||"",t}function S(t,e){e=b(e);const a=t.split(new RegExp(e.notesSeparator,"mgi"));return a.length===2&&(t=a[0]+'<aside class="notes">'+p(a[1].trim())+"</aside>"),t=t.replace(/<\/script>/g,k),'<script type="text/template">'+t+"<\/script>"}function h(t,e){e=b(e);const a=new RegExp(e.separator+(e.verticalSeparator?"|"+e.verticalSeparator:""),"mg"),r=new RegExp(e.separator);let l,n=0,s,i=!0,d,o=[];for(;l=a.exec(t);)s=r.test(l[0]),!s&&i&&o.push([]),d=t.substring(n,l.index),s&&i?o.push(d):o[o.length-1].push(d),n=a.lastIndex,i=s;(i?o:o[o.length-1]).push(t.substring(n));let u="";for(let c=0,x=o.length;c<x;c++)o[c]instanceof Array?(u+="<section "+e.attributes+">",o[c].forEach(function(N){u+="<section data-markdown>"+S(N,e)+"</section>"}),u+="</section>"):u+="<section "+e.attributes+" data-markdown>"+S(o[c],e)+"</section>";return u}function A(t){return new Promise(function(e){const a=[];[].slice.call(t.querySelectorAll("section[data-markdown]:not([data-markdown-parsed])")).forEach(function(r,l){r.getAttribute("data-markdown").length?a.push(_(r).then(function(n,s){r.outerHTML=h(n.responseText,{separator:r.getAttribute("data-separator"),verticalSeparator:r.getAttribute("data-separator-vertical"),notesSeparator:r.getAttribute("data-separator-notes"),attributes:E(r)})},function(n,s){r.outerHTML='<section data-state="alert">ERROR: The attempt to fetch '+s+" failed with HTTP status "+n.status+".Check your browser's JavaScript console for more details.<p>Remember that you need to serve the presentation HTML from a HTTP server.</p></section>"})):r.outerHTML=h(g(r),{separator:r.getAttribute("data-separator"),verticalSeparator:r.getAttribute("data-separator-vertical"),notesSeparator:r.getAttribute("data-separator-notes"),attributes:E(r)})}),Promise.all(a).then(e)})}function _(t){return new Promise(function(e,a){const r=new XMLHttpRequest,l=t.getAttribute("data-markdown"),n=t.getAttribute("data-charset");n!==null&&n!==""&&r.overrideMimeType("text/html; charset="+n),r.onreadystatechange=function(s,i){i.readyState===4&&(i.status>=200&&i.status<300||i.status===0?e(i,l):a(i,l))}.bind(this,t,r),r.open("GET",l,!0);try{r.send()}catch(s){console.warn("Failed to get the Markdown file "+l+". Make sure that the presentation and the file are served by a HTTP server and the file can be found there. "+s),e(r,l)}})}function T(t,e,a){const r=new RegExp(a,"mg"),l=new RegExp('([^"= ]+?)="([^"]+?)"|(data-[^"= ]+?)(?=[" ])',"mg");let n=t.nodeValue,s,i;if(s=r.exec(n)){const d=s[1];for(n=n.substring(0,s.index)+n.substring(r.lastIndex),t.nodeValue=n;i=l.exec(d);)i[2]?e.setAttribute(i[1],i[2]):e.setAttribute(i[3],"");return!0}return!1}function w(t,e,a,r,l){if(e!==null&&e.childNodes!==void 0&&e.childNodes.length>0){let n=e;for(let s=0;s<e.childNodes.length;s++){const i=e.childNodes[s];if(s>0){let o=s-1;for(;o>=0;){const u=e.childNodes[o];if(typeof u.setAttribute=="function"&&u.tagName!=="BR"){n=u;break}o=o-1}}let d=t;i.nodeName==="section"&&(d=i,n=i),(typeof i.setAttribute=="function"||i.nodeType===Node.COMMENT_NODE)&&w(d,i,n,r,l)}}e.nodeType===Node.COMMENT_NODE&&T(e,a,r)===!1&&T(e,t,l)}function R(){const t=f.getRevealElement().querySelectorAll("[data-markdown]:not([data-markdown-parsed])");return[].slice.call(t).forEach(function(e){e.setAttribute("data-markdown-parsed",!0);const a=e.querySelector("aside.notes"),r=g(e);e.innerHTML=p(r),w(e,e,null,e.getAttribute("data-element-attributes")||e.parentNode.getAttribute("data-element-attributes")||P,e.getAttribute("data-attributes")||e.parentNode.getAttribute("data-attributes")||C),a&&e.appendChild(a)}),Promise.resolve()}function v(t){return t.replace(/([&<>'"])/g,e=>O[e])}return{id:"markdown",init:function(t){f=t;let{renderer:e,animateLists:a,...r}=f.getConfig().markdown||{};return e||(e=new p.Renderer,e.code=(l,n)=>{let s="",i="";if(m.test(n)){let d=n.match(m)[2];d&&(s=`data-ln-start-from="${d.trim()}"`),i=n.match(m)[3].trim(),i=`data-line-numbers="${i}"`,n=n.replace(m,"").trim()}return l=v(l),`<pre><code ${i} ${s} class="${n}">${l}</code></pre>`}),a===!0&&(e.listitem=l=>`<li class="fragment">${l}</li>`),p.setOptions({renderer:e,...r}),A(f.getRevealElement()).then(R)},processSlides:A,convertSlides:R,slidify:h,marked:p}};export default H;
